@model Nop.Plugin.Misc.ProductWarranty.Areas.Admin.Models.WarrantyCategoryModel
@using Nop.Plugin.Misc.ProductWarranty.Areas.Admin.Models
@using Nop.Web.Framework.Models.DataTables

<div class="card card-default">
	<div class="card-header">
		@T("Plugins.Misc.ProductWarranty.WarrantyMapping.List")
	</div>
	<div class="card-body">
		@await Html.PartialAsync("Table", new Nop.Web.Framework.Models.DataTables.DataTablesModel
{
	Name = "category-product-mappings-grid",
	UrlRead = new DataUrl("CategoryProductMappingList", "Warranty",
		new Microsoft.AspNetCore.Routing.RouteValueDictionary {
		{ "area", "Admin" },
		{ "categoryId", Model.Id }
		}),
	Length = 10,
	// LengthMenu = Model.AvailablePageSizes,
	ColumnCollection = new List<ColumnProperty>
		{
		new ColumnProperty(nameof(WarrantyMappingModel.ProductName))
		{
		Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Product").Text,
		Width = "200"
		},
		new ColumnProperty(nameof(WarrantyMappingModel.Notes))
		{
		Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Notes").Text,
		Width = "300"
		},
		new ColumnProperty(nameof(WarrantyMappingModel.DisplayOrder))
		{
		Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.DisplayOrder").Text,
		Width = "100"
		},
		new ColumnProperty(nameof(WarrantyMappingModel.IsActive))
		{
		Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.IsActive").Text,
		Width = "100",
		ClassName = NopColumnClassDefaults.CenterAll,
		Render = new RenderBoolean()
		},
		new ColumnProperty(nameof(WarrantyMappingModel.Id))
		{
		Title = T("Admin.Common.Edit").Text,
		Width = "100",
		ClassName = NopColumnClassDefaults.Button,
		Render = new RenderCustom("renderEditButton")
		},
		new ColumnProperty(nameof(WarrantyMappingModel.Id))
		{
		Title = T("Admin.Common.Delete").Text,
		Width = "100",
		ClassName = NopColumnClassDefaults.Button,
		Render = new RenderCustom("renderDeleteButton")
		}
		}
})
	</div>
	<div class="card-footer">
		<input type="submit" id="btnAddNewProducts" name="btnAddNewProducts"
			   value="@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddProducts")"
			   onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Warranty", new { categoryId = Model.Id, btnId = "btnRefreshProductMappings", formId = "warranty-category-form" }))', 800, 800, true); return false;"
			   class="btn btn-primary" />
		<input type="button" id="btnRefreshProductMappings" name="btnRefreshProductMappings"
			   onclick="$('#category-product-mappings-grid').DataTable().ajax.reload();"
			   style="display: none;" />
		@* <input type="submit" id="btnRefreshProductMappings" name="btnRefreshProductMappings" style="display: none" /> *@
		<script>
			$(document).ready(function () {
				var mappingsTable;

				// Get a reference to the DataTable after it's initialized
				$(document).on('init.dt', '#category-product-mappings-grid', function (e, settings) {
					mappingsTable = $(e.target).DataTable();
				});

				$('#btnRefreshProductMappings').click(function () {
					//refresh grid
					if (mappingsTable) {
						mappingsTable.ajax.reload();
					} else {
						// Fallback if mappingsTable is not defined yet
						$('#category-product-mappings-grid').DataTable().ajax.reload();
					}

					//return false to don't reload a page
					return false;
				});

				// Custom rendering functions for buttons
				window.renderEditButton = function(data, type, row, meta) {
					return '<button type="button" class="btn btn-default edit-warranty-mapping" data-id="' + row.Id + '"><i class="fas fa-pencil-alt"></i> @T("Admin.Common.Edit")</button>';
				};

				window.renderDeleteButton = function(data, type, row, meta) {
					return '<button type="button" class="btn btn-default delete-warranty-mapping" data-id="' + row.Id + '"><i class="fas fa-trash-alt"></i> @T("Admin.Common.Delete")</button>';
				};

				// Edit mapping
				$(document).on('click', '.edit-warranty-mapping', function() {
					var id = $(this).data('id');
					var row = $(this).closest('tr');
					var dataTable;

					// Get the DataTable instance - try both ways
					if (mappingsTable) {
						dataTable = mappingsTable;
					} else {
						dataTable = $('#category-product-mappings-grid').DataTable();
					}

					var data = dataTable.row(row).data();

					// Fill the modal
					$('#mapping-id').val(data.Id);
					$('#product-id').val(data.ProductId);
					$('#product-name').text(data.ProductName);
					$('#mapping-notes').val(data.Notes);
					$('#mapping-display-order').val(data.DisplayOrder);
					$('#mapping-is-active').prop('checked', data.IsActive);

					// Show the modal
					$('#product-mapping-modal').modal('show');
				});

				// Save mapping
				$('#save-mapping-button').click(function() {
					var mappingId = $('#mapping-id').val();
					var updateData = {
						Id: mappingId,
						ProductId: $('#product-id').val(),
						WarrantyCategoryId: @Model.Id,
						Notes: $('#mapping-notes').val(),
						DisplayOrder: $('#mapping-display-order').val(),
						IsActive: $('#mapping-is-active').is(':checked')
					};

					// Add anti-forgery token
					updateData.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();

					$.ajax({
						cache: false,
						type: "POST",
						url: "@Url.Action("UpdateProductWarrantyMapping", "Warranty")",
						data: updateData,
						success: function(data) {
							if (data.Result) {
								// Close modal
								$('#product-mapping-modal').modal('hide');

								// Refresh grid
								if (mappingsTable) {
									mappingsTable.ajax.reload();
								} else {
									// Fallback if mappingsTable is not defined yet
									$('#category-product-mappings-grid').DataTable().ajax.reload();
								}

								// Show success message
								alert('@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Updated")');
							} else {
								// Display errors
								alert(data.Error || 'Error updating mapping.');
							}
						},
						error: function(xhr) {
							alert('Failed to update mapping.');
							console.log(xhr.responseText);
						}
					});
				});

				// Delete mapping
				$(document).on('click', '.delete-warranty-mapping', function() {
					if (confirm('@T("Admin.Common.AreYouSure")')) {
						var id = $(this).data('id');
						var deleteData = {
							id: id,
							__RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
						};

						$.ajax({
							cache: false,
							type: "POST",
							url: "@Url.Action("DeleteProductWarrantyMapping", "Warranty")",
							data: deleteData,
							success: function(data) {
								if (data.Result) {
									// Refresh grid
									if (mappingsTable) {
										mappingsTable.ajax.reload();
									} else {
										// Fallback if mappingsTable is not defined yet
										$('#category-product-mappings-grid').DataTable().ajax.reload();
									}

									// Show success message
									alert('@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Deleted")');
								} else {
									// Display errors
									alert(data.Error || 'Error deleting mapping.');
								}
							},
							error: function(xhr) {
								alert('Failed to delete mapping.');
								console.log(xhr.responseText);
							}
						});
					}
				});
			});
		</script>
	</div>
</div>

<!-- Edit Product Mapping Modal -->
<div id="product-mapping-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="product-mapping-modal-title">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="product-mapping-modal-title">@T("Plugins.Misc.ProductWarranty.WarrantyMapping.EditMapping")</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<input type="hidden" id="mapping-id" value="0" />
				<input type="hidden" id="product-id" value="0" />

				<div class="form-group row">
					<div class="col-md-3">
						<label for="product-name">@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Product")</label>
					</div>
					<div class="col-md-9">
						<div id="product-name" class="form-control-plaintext"></div>
					</div>
				</div>

				<div class="form-group row">
					<div class="col-md-3">
						<label for="mapping-notes">@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Notes")</label>
					</div>
					<div class="col-md-9">
						<textarea id="mapping-notes" class="form-control"></textarea>
					</div>
				</div>

				<div class="form-group row">
					<div class="col-md-3">
						<label for="mapping-display-order">@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.DisplayOrder")</label>
					</div>
					<div class="col-md-9">
						<input type="number" id="mapping-display-order" class="form-control" value="1" />
					</div>
				</div>

				<div class="form-group row">
					<div class="col-md-3">
						<label for="mapping-is-active">@T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.IsActive")</label>
					</div>
					<div class="col-md-9">
						<div class="onoffswitch">
							<input type="checkbox" id="mapping-is-active" class="onoffswitch-checkbox" checked="checked" />
							<label class="onoffswitch-label" for="mapping-is-active"></label>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">@T("Admin.Common.Cancel")</button>
				<button type="button" id="save-mapping-button" class="btn btn-primary">@T("Admin.Common.Save")</button>
			</div>
		</div>
	</div>
</div>