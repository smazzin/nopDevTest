@* ProductWarrantyMappings.cshtml *@
@using Nop.Plugin.Misc.ProductWarranty.Areas.Admin.Models
@model WarrantyMappingModel
@{
	Layout = "_AdminLayout";
	ViewBag.PageTitle = T("Plugins.Misc.ProductWarranty.WarrantyMappings").Text;
}

<div class="content-header clearfix">
	<h1 class="float-left">
		@T("Plugins.Misc.ProductWarranty.WarrantyMappings")
	</h1>
</div>

<div class="content">
	<div class="form-horizontal">
		<div class="cards-group">
			<div class="card card-default">
				<div class="card-header">
					@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddNew")
				</div>
				<div class="card-body">
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="ProductId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="ProductId" asp-items="Model.AvailableProducts" />
							<span asp-validation-for="ProductId"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="WarrantyCategoryId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="WarrantyCategoryId" asp-items="Model.AvailableWarrantyCategories" />
							<span asp-validation-for="WarrantyCategoryId"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="Notes" />
						</div>
						<div class="col-md-9">
							<nop-textarea asp-for="Notes" />
							<span asp-validation-for="Notes"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="DisplayOrder" />
						</div>
						<div class="col-md-9">
							<nop-editor asp-for="DisplayOrder" />
							<span asp-validation-for="DisplayOrder"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="IsActive" />
						</div>
						<div class="col-md-9">
							<nop-editor asp-for="IsActive" />
							<span asp-validation-for="IsActive"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-9 offset-md-3">
							<button type="button" id="addWarrantyMapping" class="btn btn-primary">
								@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddButton")
							</button>
						</div>
					</div>
				</div>
			</div>
			<div class="card card-default">
				<div class="card-header">
					@T("Plugins.Misc.ProductWarranty.WarrantyMapping.List")
				</div>
				<div class="card-body">
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="ProductId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="ProductId" asp-items="Model.AvailableProducts" id="search-product-id" />
							<button type="button" id="search-warranty-mappings" class="btn btn-primary">
								@T("Admin.Common.Search")
							</button>
						</div>
					</div>
				</div>
				<div class="card-body">
					@await Html.PartialAsync("Table", new Nop.Web.Framework.Models.DataTables.DataTablesModel
{
	Name = "warranty-mappings-grid",
	UrlRead = new DataUrl("WarrantyMappingList", "Warranty"),
	SearchButtonId = "search-warranty-mappings",
	Length = 15,
	LengthMenu = "15, 25, 50, 100",
	Filters = new List<FilterParameter>
					{
					new FilterParameter(nameof(Model.ProductId), "search-product-id")
					},
	ColumnCollection = new List<ColumnProperty>
					{
					new ColumnProperty(nameof(WarrantyMappingModel.ProductName))
					{
					Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Product").Text,
					Width = "200"
					},
					new ColumnProperty(nameof(WarrantyMappingModel.WarrantyCategoryName))
					{
					Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.WarrantyCategory").Text,
					Width = "200"
					},
					new ColumnProperty(nameof(WarrantyMappingModel.Notes))
					{
					Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.Notes").Text,
					Width = "300"
					},
					new ColumnProperty(nameof(WarrantyMappingModel.DisplayOrder))
					{
					Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.DisplayOrder").Text,
					Width = "100"
					},
					new ColumnProperty(nameof(WarrantyMappingModel.IsActive))
					{
					Title = T("Plugins.Misc.ProductWarranty.WarrantyMapping.Fields.IsActive").Text,
					Width = "100",
					ClassName = NopColumnClassDefaults.CenterAll,
					Render = new RenderBoolean()
					},
					new ColumnProperty(nameof(WarrantyMappingModel.Id))
					{
					Title = T("Admin.Common.Edit").Text,
					Width = "100",
					ClassName = NopColumnClassDefaults.Button,
					Render = new RenderCustom("renderEditButton")
					},
					new ColumnProperty(nameof(WarrantyMappingModel.Id))
					{
					Title = T("Admin.Common.Delete").Text,
					Width = "100",
					ClassName = NopColumnClassDefaults.Button,
					Render = new RenderCustom("renderDeleteButton")
					}
					}
})
					<script>
						function renderEditButton(data, type, row, meta) {
							return '<button type="button" class="btn btn-default edit-warranty-mapping" data-id="' + data + '"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit")</button>';
						}

						function renderDeleteButton(data, type, row, meta) {
							return '<button type="button" class="btn btn-default delete-warranty-mapping" data-id="' + data + '"><i class="fas fa-trash-alt"></i>@T("Admin.Common.Delete")</button>';
						}

						$(document).ready(function() {
							// Add new mapping
							$("#addWarrantyMapping").click(function() {
								var formData = {
									ProductId: $("#ProductId").val(),
									WarrantyCategoryId: $("#WarrantyCategoryId").val(),
									Notes: $("#Notes").val(),
									DisplayOrder: $("#DisplayOrder").val(),
									IsActive: $("#IsActive").is(':checked')
								};

								// Add anti-forgery token
								addAntiForgeryToken(formData);

								$.ajax({
									cache: false,
									type: "POST",
									url: "@Url.Action("AddProductWarrantyMapping", "Warranty")",
									data: formData,
									success: function(data) {
										if (data.Result) {
											//refresh grid
											$('#warranty-mappings-grid').DataTable().ajax.reload();

											//clear input
											$("#Notes").val('');
											$("#DisplayOrder").val(1);
										} else {
											//display errors
											display_nop_error(data);
										}
									},
									error: function(xhr, ajaxOptions, thrownError) {
										console.log(xhr.responseText); // Log the error response for debugging
										alert('Failed to add mapping.');
									}
								});
							});

							// Edit mapping
							$(document).on('click', '.edit-warranty-mapping', function() {
								var id = $(this).data('id');
								var row = $(this).closest('tr');
								var table = $('#warranty-mappings-grid').DataTable();
								var data = table.row(row).data();

								$("#ProductId").val(data.ProductId);
								$("#WarrantyCategoryId").val(data.WarrantyCategoryId);
								$("#Notes").val(data.Notes);
								$("#DisplayOrder").val(data.DisplayOrder);
								$("#IsActive").prop('checked', data.IsActive);

								// Change add button to update
								$("#addWarrantyMapping").text('@T("Admin.Common.Update")');
								$("#addWarrantyMapping").attr('data-id', id);
								$("#addWarrantyMapping").removeClass('btn-primary').addClass('btn-success');

								// Change click handler to update
								$("#addWarrantyMapping").off('click').on('click', function() {
									var mappingId = $(this).attr('data-id');
									var updateData = {
										Id: mappingId,
										ProductId: $("#ProductId").val(),
										WarrantyCategoryId: $("#WarrantyCategoryId").val(),
										Notes: $("#Notes").val(),
										DisplayOrder: $("#DisplayOrder").val(),
										IsActive: $("#IsActive").is(':checked')
									};

									// Add anti-forgery token
									addAntiForgeryToken(updateData);

									$.ajax({
										cache: false,
										type: "POST",
										url: "@Url.Action("UpdateProductWarrantyMapping", "Warranty")",
										data: updateData,
										success: function(data) {
											if (data.Result) {
												//refresh grid
												$('#warranty-mappings-grid').DataTable().ajax.reload();

												//clear input
												$("#Notes").val('');
												$("#DisplayOrder").val(1);
												$("#IsActive").prop('checked', true);

												// Reset button
												$("#addWarrantyMapping").text('@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddButton")');
												$("#addWarrantyMapping").removeAttr('data-id');
												$("#addWarrantyMapping").removeClass('btn-success').addClass('btn-primary');

												// Restore click handler
												$("#addWarrantyMapping").off('click');
												$("#addWarrantyMapping").click(function() {
													// Original click handler code (same as above)
													var formData = {
														ProductId: $("#ProductId").val(),
														WarrantyCategoryId: $("#WarrantyCategoryId").val(),
														Notes: $("#Notes").val(),
														DisplayOrder: $("#DisplayOrder").val(),
														IsActive: $("#IsActive").is(':checked')
													};

													addAntiForgeryToken(formData);

													$.ajax({
														cache: false,
														type: "POST",
														url: "@Url.Action("AddProductWarrantyMapping", "Warranty")",
														data: formData,
														success: function(data) {
															if (data.Result) {
																$('#warranty-mappings-grid').DataTable().ajax.reload();
																$("#Notes").val('');
																$("#DisplayOrder").val(1);
															} else {
																display_nop_error(data);
															}
														},
														error: function(xhr, ajaxOptions, thrownError) {
															console.log(xhr.responseText);
															alert('Failed to add mapping.');
														}
													});
												});
											} else {
												//display errors
												display_nop_error(data);
											}
										},
										error: function(xhr, ajaxOptions, thrownError) {
											alert('Failed to update mapping.');
										}
									});
								});
							});

							// Delete mapping
							$(document).on('click', '.delete-warranty-mapping', function() {
								if (confirm('@T("Admin.Common.AreYouSure")')) {
									var id = $(this).data('id');
									var deleteData = {
										id: id
									};

									// Add anti-forgery token
									addAntiForgeryToken(deleteData);

									$.ajax({
										cache: false,
										type: "POST",
										url: "@Url.Action("DeleteProductWarrantyMapping", "Warranty")",
										data: deleteData,
										success: function(data) {
											if (data.Result) {
												//refresh grid
												$('#warranty-mappings-grid').DataTable().ajax.reload();
											} else {
												//display errors
												display_nop_error(data);
											}
										},
										error: function(xhr, ajaxOptions, thrownError) {
											alert('Failed to delete mapping.');
										}
									});
								}
							});
						});
					</script>
				</div>
			</div>
		</div>
	</div>
</div>