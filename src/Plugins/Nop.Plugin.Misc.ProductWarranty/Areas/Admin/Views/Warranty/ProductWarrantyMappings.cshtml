@* ProductWarrantyMappings.cshtml *@
@using Nop.Plugin.Misc.ProductWarranty.Areas.Admin.Models
@model WarrantyMappingModel
@{
	Layout = "_AdminLayout";
	ViewBag.PageTitle = T("Plugins.Misc.ProductWarranty.WarrantyMappings").Text;
}

<div class="content-header clearfix">
	<h1 class="float-left">
		@T("Plugins.Misc.ProductWarranty.WarrantyMappings")
	</h1>
</div>

<div class="content">
	<div class="form-horizontal">
		<div class="cards-group">
			<div class="card card-default">
				<div class="card-header">
					@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddNew")
				</div>
				<div class="card-body">
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="ProductId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="ProductId" asp-items="Model.AvailableProducts" />
							<span asp-validation-for="ProductId"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="WarrantyCategoryId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="WarrantyCategoryId" asp-items="Model.AvailableWarrantyCategories" />
							<span asp-validation-for="WarrantyCategoryId"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="Notes" />
						</div>
						<div class="col-md-9">
							<nop-textarea asp-for="Notes" />
							<span asp-validation-for="Notes"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="DisplayOrder" />
						</div>
						<div class="col-md-9">
							<nop-editor asp-for="DisplayOrder" />
							<span asp-validation-for="DisplayOrder"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="IsActive" />
						</div>
						<div class="col-md-9">
							<nop-editor asp-for="IsActive" />
							<span asp-validation-for="IsActive"></span>
						</div>
					</div>
					<div class="form-group row">
						<div class="col-md-9 offset-md-3">
							<button type="button" id="addWarrantyMapping" class="btn btn-primary">
								@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddButton")
							</button>
						</div>
					</div>
				</div>
			</div>
			<div class="card card-default">
				<div class="card-header">
					@T("Plugins.Misc.ProductWarranty.WarrantyMapping.List")
				</div>
				@*
				<div class="card-body">
					<div class="form-group row">
						<div class="col-md-3">
							<nop-label asp-for="ProductId" />
						</div>
						<div class="col-md-9">
							<nop-select asp-for="ProductId" asp-items="Model.AvailableProducts" id="search-product-id" />
							<button type="button" id="search-warranty-mappings" class="btn btn-primary">
								@T("Admin.Common.Search")
							</button>
						</div>
					</div>
				</div>
				*@
				<div class="card-body">
					<table id="warranty-mappings-grid" class="display" style="width:100%">
						<thead>
							<tr>
								<th>Product</th>
								<th>Category</th>
								<th>Notes</th>
								<th>Order</th>
								<th>Active</th>
								<th>Edit</th>
								<th>Delete</th>
							</tr>
						</thead>
					</table>

					<script>
						$(document).ready(function() {
							var dataTable = $('#warranty-mappings-grid').DataTable({
								"processing": true,
								"serverSide": true,
								"ajax": {
									"url": "@Url.Action("WarrantyMappingList", "Warranty")",
									"type": "POST",
									"data": function(d) {
										d.productId = $('#search-product-id').val();
										// Add anti-forgery token
										d.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
									}
								},
								"columns": [
									{ "data": "ProductName" },
									{ "data": "WarrantyCategoryName" },
									{ "data": "Notes" },
									{ "data": "DisplayOrder" },
									{
										"data": "IsActive",
										"render": function(data) {
											return data ? '<span class="true-icon"></span>' : '<span class="false-icon"></span>';
										}
									},
									{
										"data": "Id",
										"render": function(data, type, row) {
											return '<button type="button" class="btn btn-default edit-warranty-mapping" data-id="' + data + '"><i class="fas fa-pencil-alt"></i>Edit</button>';
										}
									},
									{
										"data": "Id",
										"render": function(data, type, row) {
											return '<button type="button" class="btn btn-default delete-warranty-mapping" data-id="' + data + '"><i class="fas fa-trash-alt"></i>Delete</button>';
										}
									}
								]
							});

							// Edit mapping
							$(document).on('click', '.edit-warranty-mapping', function() {
								var id = $(this).data('id');
								var row = $(this).closest('tr');
								var data = dataTable.row(row).data();

								// Fill the form with the current values
								$("#ProductId").val(data.ProductId);
								$("#WarrantyCategoryId").val(data.WarrantyCategoryId);
								$("#Notes").val(data.Notes);
								$("#DisplayOrder").val(data.DisplayOrder);
								$("#IsActive").prop('checked', data.IsActive);

								// Change add button to update
								$("#addWarrantyMapping").text('@T("Admin.Common.Update")');
								$("#addWarrantyMapping").attr('data-id', id);
								$("#addWarrantyMapping").removeClass('btn-primary').addClass('btn-success');

								// Scroll to the form
								$('html, body').animate({
									scrollTop: $("#addWarrantyMapping").offset().top - 200
								}, 500);

								// Change click handler to update
								$("#addWarrantyMapping").off('click').on('click', function() {
									var mappingId = $(this).attr('data-id');
									var updateData = {
										Id: mappingId,
										ProductId: $("#ProductId").val(),
										WarrantyCategoryId: $("#WarrantyCategoryId").val(),
										Notes: $("#Notes").val(),
										DisplayOrder: $("#DisplayOrder").val(),
										IsActive: $("#IsActive").is(':checked')
									};

									// Add anti-forgery token
									updateData.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();

									$.ajax({
										cache: false,
										type: "POST",
										url: "@Url.Action("UpdateProductWarrantyMapping", "Warranty")",
										data: updateData,
										success: function(data) {
											if (data.Result) {
												// Refresh grid
												dataTable.ajax.reload();

												// Clear form
												$("#Notes").val('');
												$("#DisplayOrder").val(1);
												$("#IsActive").prop('checked', true);

												// Reset button
												$("#addWarrantyMapping").text('@T("Plugins.Misc.ProductWarranty.WarrantyMapping.AddButton")');
												$("#addWarrantyMapping").removeAttr('data-id');
												$("#addWarrantyMapping").removeClass('btn-success').addClass('btn-primary');

												// Restore original click handler
												setupAddButtonHandler();
											} else {
												// Display errors
												display_nop_error(data);
											}
										},
										error: function(xhr) {
											alert('Failed to update mapping.');
											console.log(xhr.responseText);
										}
									});
								});
							});

							// Delete mapping
							$(document).on('click', '.delete-warranty-mapping', function() {
								if (confirm('@T("Admin.Common.AreYouSure")')) {
									var id = $(this).data('id');
									var deleteData = {
										id: id,
										__RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
									};

									$.ajax({
										cache: false,
										type: "POST",
										url: "@Url.Action("DeleteProductWarrantyMapping", "Warranty")",
										data: deleteData,
										success: function(data) {
											if (data.Result) {
												// Refresh grid
												dataTable.ajax.reload();
											} else {
												// Display errors
												display_nop_error(data);
											}
										},
										error: function(xhr) {
											alert('Failed to delete mapping.');
											console.log(xhr.responseText);
										}
									});
								}
							});

							// Add new mapping - define this as a function so we can call it again after updating
							function setupAddButtonHandler() {
								$("#addWarrantyMapping").off('click').on('click', function() {
									var formData = {
										ProductId: $("#ProductId").val(),
										WarrantyCategoryId: $("#WarrantyCategoryId").val(),
										Notes: $("#Notes").val(),
										DisplayOrder: $("#DisplayOrder").val(),
										IsActive: $("#IsActive").is(':checked'),
										__RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
									};

									$.ajax({
										cache: false,
										type: "POST",
										url: "@Url.Action("AddProductWarrantyMapping", "Warranty")",
										data: formData,
										success: function(data) {
											if (data.Result) {
												// Refresh grid
												dataTable.ajax.reload();

												// Clear form
												$("#Notes").val('');
												$("#DisplayOrder").val(1);
											} else {
												// Display errors
												display_nop_error(data);
											}
										},
										error: function(xhr) {
											alert('Failed to add mapping.');
											console.log(xhr.responseText);
										}
									});
								});
							}

							// Initialize the add button handler
							setupAddButtonHandler();

							// Search button handler
							$("#search-warranty-mappings").click(function() {
								dataTable.ajax.reload();
							});
						});
					</script>
				</div>
			</div>
		</div>
	</div>
</div>